STEEL DATA SQL CHALLENGE

Challenge 1 - Steve's Car Showroom


    -- CREATING THE TABLE cars
    CREATE TABLE cars (
    car_id INT PRIMARY KEY,
    make VARCHAR(50),
    type VARCHAR(50),
    style VARCHAR(50),
    cost_$ INT
    );
    -- INSERTING THE VALUES INTO cars
    INSERT INTO cars (car_id, make, type, style, cost_$)
    VALUES (1, 'Honda', 'Civic', 'Sedan', 30000),
    (2, 'Toyota', 'Corolla', 'Hatchback', 25000),
    (3, 'Ford', 'Explorer', 'SUV', 40000),
    (4, 'Chevrolet', 'Camaro', 'Coupe', 36000),
    (5, 'BMW', 'X5', 'SUV', 55000),
    (6, 'Audi', 'A4', 'Sedan', 48000),
    (7, 'Mercedes', 'C-Class', 'Coupe', 60000),
    (8, 'Nissan', 'Altima', 'Sedan', 26000);
    
    -- CREATING THE TABLE salespersons
    CREATE TABLE salespersons (
    salesman_id INT PRIMARY KEY,
    name VARCHAR(50),
    age INT,
    city VARCHAR(50)
    );
    -- INSERTING THE VALUES INTO salespersons
    INSERT INTO salespersons (salesman_id, name, age, city)
    VALUES (1, 'John Smith', 28, 'New York'),
    (2, 'Emily Wong', 35, 'San Fran'),
    (3, 'Tom Lee', 42, 'Seattle'),
    (4, 'Lucy Chen', 31, 'LA');
    
    -- CREATING THE TABLE sales
    CREATE TABLE sales (
    sale_id INT PRIMARY KEY,
    car_id INT,
    salesman_id INT,
    purchase_date DATE,
    FOREIGN KEY (car_id) REFERENCES cars(car_id),
    FOREIGN KEY (salesman_id) REFERENCES salespersons(salesman_id)
    );
    -- INSERTING THE VALUES INTO sales
    INSERT INTO sales (sale_id, car_id, salesman_id, purchase_date)
    VALUES (1, 1, 1, '2021-01-01'),
    (2, 3, 3, '2021-02-03'),
    (3, 2, 2, '2021-02-10'),
    (4, 5, 4, '2021-03-01'),
    (5, 8, 1, '2021-04-02'),
    (6, 2, 1, '2021-05-05'),
    (7, 4, 2, '2021-06-07'),
    (8, 5, 3, '2021-07-09'),
    (9, 2, 4, '2022-01-01'),
    (10, 1, 3, '2022-02-03'),
    (11, 8, 2, '2022-02-10'),
    (12, 7, 2, '2022-03-01'),
    (13, 5, 3, '2022-04-02'),
    (14, 3, 1, '2022-05-05'),
    (15, 5, 4, '2022-06-07'),
    (16, 1, 2, '2022-07-09'),
    (17, 2, 3, '2023-01-01'),
    (18, 6, 3, '2023-02-03'),
    (19, 7, 1, '2023-02-10'),
    (20, 4, 4, '2023-03-01');

---

**Query #1**

-- 1.)What are the details of all cars purchased in the year 2022?

    	SELECT c.*, s.purchase_date
        FROM cars c
        JOIN sales s on s.car_id = c.car_id
        WHERE YEAR(s.purchase_date) = 2022;

| car_id | make     | type     | style     | cost_$ | purchase_date |
| ------ | -------- | -------- | --------- | ------ | ------------- |
| 2      | Toyota   | Corolla  | Hatchback | 25000  | 2022-01-01    |
| 1      | Honda    | Civic    | Sedan     | 30000  | 2022-02-03    |
| 8      | Nissan   | Altima   | Sedan     | 26000  | 2022-02-10    |
| 7      | Mercedes | C-Class  | Coupe     | 60000  | 2022-03-01    |
| 5      | BMW      | X5       | SUV       | 55000  | 2022-04-02    |
| 3      | Ford     | Explorer | SUV       | 40000  | 2022-05-05    |
| 5      | BMW      | X5       | SUV       | 55000  | 2022-06-07    |
| 1      | Honda    | Civic    | Sedan     | 30000  | 2022-07-09    |

---

[View on DB Fiddle](https://www.db-fiddle.com/f/9hQVuwDjjKsnMvQgq3fJdQ/0)


**Query #2**

-- 2.)What is the total number of cars sold by each salesperson?

    SELECT sp.name, COUNT(s.car_id) as total_cars
    FROM sales s
    JOIN salespersons sp on sp.salesman_id = s.salesman_id
    GROUP BY sp.name;

| name       | total_cars |
| ---------- | ---------- |
| John Smith | 5          |
| Tom Lee    | 6          |
| Emily Wong | 5          |
| Lucy Chen  | 4          |

---

[View on DB Fiddle](https://www.db-fiddle.com/f/9hQVuwDjjKsnMvQgq3fJdQ/0)


**Query #3**

-- 3.)What is the total revenue generated by each salesperson?

    SELECT sp.name, SUM(c.cost_$) as total_revenue
    FROM salespersons sp
    JOIN sales s ON s.salesman_id = sp.salesman_id
    JOIN cars c on c.car_id = s.car_id
    GROUP BY sp.name
    ORDER BY total_revenue DESC;

| name       | total_revenue |
| ---------- | ------------- |
| Tom Lee    | 253000        |
| John Smith | 181000        |
| Emily Wong | 177000        |
| Lucy Chen  | 171000        |

---

[View on DB Fiddle](https://www.db-fiddle.com/f/9hQVuwDjjKsnMvQgq3fJdQ/1)


---

**Query #4**

-- 4.)What are the details of the cars sold by each salesperson?

    SELECT sp.name, c.*
    FROM cars c
    JOIN sales s ON s.car_id = c.car_id
    JOIN salespersons sp ON sp.salesman_id = s.salesman_id
    ORDER BY sp.name;

| name       | car_id | make      | type     | style     | cost_$ |
| ---------- | ------ | --------- | -------- | --------- | ------ |
| Emily Wong | 2      | Toyota    | Corolla  | Hatchback | 25000  |
| Emily Wong | 4      | Chevrolet | Camaro   | Coupe     | 36000  |
| Emily Wong | 1      | Honda     | Civic    | Sedan     | 30000  |
| Emily Wong | 8      | Nissan    | Altima   | Sedan     | 26000  |
| Emily Wong | 7      | Mercedes  | C-Class  | Coupe     | 60000  |
| John Smith | 1      | Honda     | Civic    | Sedan     | 30000  |
| John Smith | 7      | Mercedes  | C-Class  | Coupe     | 60000  |
| John Smith | 8      | Nissan    | Altima   | Sedan     | 26000  |
| John Smith | 2      | Toyota    | Corolla  | Hatchback | 25000  |
| John Smith | 3      | Ford      | Explorer | SUV       | 40000  |
| Lucy Chen  | 4      | Chevrolet | Camaro   | Coupe     | 36000  |
| Lucy Chen  | 5      | BMW       | X5       | SUV       | 55000  |
| Lucy Chen  | 2      | Toyota    | Corolla  | Hatchback | 25000  |
| Lucy Chen  | 5      | BMW       | X5       | SUV       | 55000  |
| Tom Lee    | 5      | BMW       | X5       | SUV       | 55000  |
| Tom Lee    | 1      | Honda     | Civic    | Sedan     | 30000  |
| Tom Lee    | 5      | BMW       | X5       | SUV       | 55000  |
| Tom Lee    | 2      | Toyota    | Corolla  | Hatchback | 25000  |
| Tom Lee    | 6      | Audi      | A4       | Sedan     | 48000  |
| Tom Lee    | 3      | Ford      | Explorer | SUV       | 40000  |

---

[View on DB Fiddle](https://www.db-fiddle.com/f/9hQVuwDjjKsnMvQgq3fJdQ/0)


---

**Query #5**

-- 5.)What is the total revenue generated by each car type?

    SELECT c.type, SUM(c.cost_$) as total_revenue
    FROM cars c
    JOIN sales s ON s.car_id = c.car_id
    GROUP BY c.type
    ORDER BY total_revenue DESC;

| type     | total_revenue |
| -------- | ------------- |
| X5       | 220000        |
| C-Class  | 120000        |
| Corolla  | 100000        |
| Civic    | 90000         |
| Explorer | 80000         |
| Camaro   | 72000         |
| Altima   | 52000         |
| A4       | 48000         |

---

[View on DB Fiddle](https://www.db-fiddle.com/f/9hQVuwDjjKsnMvQgq3fJdQ/0)

---

**Query #6**

-- 6.)What are the details of the cars sold in the year 2021 by salesperson 'Emily Wong'?

    SELECT sp.name, c.*, s.purchase_date
    FROM cars c
    JOIN sales s ON s.car_id = c.car_id
    JOIN salespersons sp ON sp.salesman_id = s.salesman_id
    WHERE sp.name = "Emily Wong" AND YEAR(s.purchase_date)= 2021;

| name       | car_id | make      | type    | style     | cost_$ | purchase_date |
| ---------- | ------ | --------- | ------- | --------- | ------ | ------------- |
| Emily Wong | 2      | Toyota    | Corolla | Hatchback | 25000  | 2021-02-10    |
| Emily Wong | 4      | Chevrolet | Camaro  | Coupe     | 36000  | 2021-06-07    |

---

[View on DB Fiddle](https://www.db-fiddle.com/f/9hQVuwDjjKsnMvQgq3fJdQ/0)

---

**Query #7**

-- 7.)What is the total revenue generated by the sales of hatchback cars?

    SELECT SUM(c.cost_$) as total_revenue_hatchback
    FROM cars c
    JOIN sales s ON s.car_id = c.car_id 
    WHERE c.style = 'Hatchback';

| total_revenue_hatchback |
| ----------------------- |
| 100000                  |

---

[View on DB Fiddle](https://www.db-fiddle.com/f/9hQVuwDjjKsnMvQgq3fJdQ/0)

---

**Query #8**

-- 8.) What is the total revenue generated by the sales of SUV cars in the year 2022?

    SELECT SUM(c.cost_$) AS total_revenue_SUV
    FROM cars c
    JOIN sales s ON s.car_id = c.car_id
    WHERE YEAR(s.purchase_date) = 2022;

| total_revenue_SUV |
| ----------------- |
| 321000            |

---

[View on DB Fiddle](https://www.db-fiddle.com/f/9hQVuwDjjKsnMvQgq3fJdQ/0)

---

**Query #9**

-- 9.)What is the name and city of the salesperson who sold the most number of cars in the year 2023?

    SELECT sp.name, sp.city
    FROM salespersons sp
    JOIN sales s ON s.salesman_id = sp.salesman_id
    WHERE YEAR(s.purchase_date) = 2023
    ORDER BY sp.name DESC
    LIMIT 1;

| name    | city    |
| ------- | ------- |
| Tom Lee | Seattle |

---

[View on DB Fiddle](https://www.db-fiddle.com/f/9hQVuwDjjKsnMvQgq3fJdQ/0)

---

**Query #10**

-- 10.) What is the name and age of the salesperson who generated the highest revenue in the year 2022?

    SELECT sp.name, sp.age, SUM(c.cost_$) as total_revenue
    FROM salespersons sp
    JOIN sales s ON s.salesman_id = sp.salesman_id
    JOIN cars c ON c.car_id = s.car_id
    WHERE YEAR(s.purchase_date) = 2022
    GROUP BY sp.name, sp.age
    ORDER BY total_revenue DESC
    LIMIT 1;

| name       | age | total_revenue |
| ---------- | --- | ------------- |
| Emily Wong | 35  | 116000        |

---

[View on DB Fiddle](https://www.db-fiddle.com/f/9hQVuwDjjKsnMvQgq3fJdQ/0)
